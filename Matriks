# Import Library
import pandas as pd
import numpy as np
from sklearn.decomposition import PCA
from sklearn.cluster import KMeans

# Membaca File
df = pd.read_csv('DataMahsiswaMatdisA.csv')
df.head()

# Menentukan Skor
P = np.array([0.35, 0.15, 0.20, 0.30])
C = df.iloc[:, 2:6].to_numpy()
scores = C @ P
df["Skor_Total"] = scores
top4 = df.nlargest(4, "Skor_Total")
print("Top 4 Mahasigma")
print(top4[["NPM", "NAMA", "Skor_Total"]])

# Menghitung Matriks Kovarian dan Korelasi
cov_mat = np.cov(C, rowvar=False, ddof=1)
corr_mat = np.corrcoef(C, rowvar=False)
print("Nilai Matriks Kovarian")
print(cov_mat)
print("Nilai Matriks Korelasi")
print(corr_mat)

# Cosine SImilarity
norms = np.linalg.norm(C, axis=1, keepdims=True)
cosine_sim = (C @ C.T) / (norms @ norms.T)
cosine_df = pd.DataFrame(cosine_sim, index=df["NAMA"], columns=df["NAMA"])
print("Hasil Cosine Similarity")
print(cosine_df.iloc[:5, :5])

# PCA
pca = PCA(n_components=2)
C_pca = pca.fit_transform(C)
df["PC1"] = C_pca[:,0]
df["PC2"] = C_pca[:,1]
print("Hasil PCA")
print(df[["NAMA", "PC1", "PC2"]].head())

# Clustering
kmeans = KMeans(n_clusters=3, random_state=42)
labels = kmeans.fit_predict(C_pca)
df["Cluster"] = labels
print("Hasil Clustering Mahasiswa")
print(df[["NAMA", "Cluster"]].head(10))
